Sum of Series :

class Solution {
  public:
    long long seriesSum(int n) {
        long long ans = n;
       return (ans*(ans+1))/2;
        
    }
};

----------------------------------------------------------------------------

Value equal to index value :

class Solution{
public:

	vector<int> valueEqualToIndex(int arr[], int n) {
	    vector<int> v;
	    for(int i=0; i<n; i++){
	        if(arr[i] == i+1){
	            v.push_back(arr[i]);
	            
	        }
	    }
	    return v;
	}
};

-----------------------------------------------------------------------------

Print alternate elements of an array :

void print(int ar[], int n)
{
    vector<int> v;
    
    for(int i=0; i<n; i+=2){
        cout << ar[i] << " ";
    }    
}

------------------------------------------------------------------------------

Print the pattern | Set-1 :

void printPat(int n)
{
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            for(int k=0; k<n-i; k++){
                cout << n-j << " ";
            }
        }
        cout << "$";
    }
}

------------------------------------------------------------------------------

Count of smaller elements :

int countOfElements(int arr[], int n, int x) 
{
    int count = 0;
    
    for(int i=0; i<n; i++){
        if(arr[i] <= x){
            count++;
        }
    }
     return count;
}

--------------------------------------------------------------------------------

Sum of Array :

class Solution{
public:
	
	int sum(int arr[], int n) {
	    int ans = 0;
	    for(int i=0; i<n; i++){
	        ans = ans+arr[i];
	    }
	    return ans;
	}
};

----------------------------------------------------------------------------

Print Elements of Array :

class Solution{
public:
    
	void printArray(int arr[], int n) {
	    for(int i=0; i<n; i++){
	        cout << arr[i] << " ";
	    }
	}
};
